group<-subset(group,group!="group")
data$group<-group
data$gender<-as.character(data$gender)
data$parental.level.of.education<-as.character(data$parental.level.of.education)
data$lunch<-as.character(data$lunch)
data$test.preparation.course<-as.character(data$test.preparation.course)
data$math.score<-as.numeric(as.character(data$math.score))
data$reading.score<-as.numeric(as.character(data$reading.score))
data$writing.score<-as.numeric(as.character(data$writing.score))
class(data$gender)
class(data$math.score)
data$math.score
sum<-c(data$math.score+data$reading.score+data$writing.score)
data<-cbind(data,sum)
data<-data[order(data$sum,decreasing = TRUE),]
data
View(data)
scatter_plot<- ggplot(data,aes(x=gender,y=sum)) +
geom_point()
scatter_plot
rm(list=ls())
library(ggplot2)
library(stats)
library(dplyr)
data<-read.csv("C:/Users/user/OneDrive/桌面/StudentsPerformance.csv", header=T, sep=",")
#View(data)
#head(data)
colnames(data)[2]<-"group"
#colnames(data)
#SP<-data.frame(){
#  as.character(data$gender,data$group)
#}
data$group<-as.character(data$group)
group<-strsplit(data$group," ")
group<-unlist(group)
group<-subset(group,group!="group")
data$group<-group
data$gender<-as.character(data$gender)
data$parental.level.of.education<-as.character(data$parental.level.of.education)
data$lunch<-as.character(data$lunch)
data$test.preparation.course<-as.character(data$test.preparation.course)
data$math.score<-as.numeric(as.character(data$math.score))
data$reading.score<-as.numeric(as.character(data$reading.score))
data$writing.score<-as.numeric(as.character(data$writing.score))
class(data$gender)
class(data$math.score)
data$math.score
sum<-c(data$math.score+data$reading.score+data$writing.score)
data<-cbind(data,sum)
data<-data[order(data$sum,decreasing = TRUE),]
data
View(data)
scatter_plot<- ggplot(data,aes(x=gender,y=sum)) +
geom_point()
scatter_plot
fcount<-select(data,data$gender="female")
fcount<-filter(data,data$gender="female")
fcount<-filter(data,data$gender!="female")
fcount
sum(fcount)
colnum(fcount)
ncol(fcount)
nrow(fcount)
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
ggplot(data, aes(fill=condition, y=value, x=gen)) +
geom_bar(position="dodge", stat="identity")
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
ggplot(data, aes(fill=condition, y=gencount, x=gen)) +
geom_bar(position="dodge", stat="identity")
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
ggplot(data, aes(fill=gen, y=gencount, x=gen)) +
geom_bar(position="dodge", stat="identity")
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
barplot(gencount)
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
barplot(gencount,main=gen)
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
barplot(gencount,col=gen)
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
barplot(gencount,colnames=gen)
barplot(gencount,names.arg=gen)
fcount<-filter(data,data$gender=="female")
mcount<-filter(data,data$gender=="male")
nrow(fcount)
nrow(mcount)
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
barplot(gencount,names.arg=gen,col=c("darkblue","red"))
#題目改成 Student Performance analysis
#資料來源 https://www.kaggle.com/spscientist/students-performance-in-exams
rm(list=ls())
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require(stats)) {
install.packages("stats")
library(stats)
}
if (!require(dplyr)) {
install.packages("dplyr")
library(dplyr)
}
#讀檔
data<-read.csv("C:/Users/user/OneDrive/桌面/StudentsPerformance.csv", header=T, sep=",")
#View(data)
#head(data)
#資料清洗和重整
colnames(data)[2]<-"group"
#colnames(data)
data$group<-as.character(data$group)
group<-strsplit(data$group," ")
group<-unlist(group)
group<-subset(group,group!="group")
data$group<-group
data$gender<-as.character(data$gender)
data$parental.level.of.education<-as.character(data$parental.level.of.education)
data$lunch<-as.character(data$lunch)
data$test.preparation.course<-as.character(data$test.preparation.course)
data$math.score<-as.numeric(as.character(data$math.score))
data$reading.score<-as.numeric(as.character(data$reading.score))
data$writing.score<-as.numeric(as.character(data$writing.score))
#增加一列觀察成績總和
sum<-c(data$math.score+data$reading.score+data$writing.score)
#將資料合併
data<-cbind(data,sum)
#將資料做排序
data<-data[order(data$sum,decreasing = TRUE),]
View(data)
#題目改成 Student Performance analysis
#資料來源 https://www.kaggle.com/spscientist/students-performance-in-exams
#共1000筆資料
rm(list=ls())
#午餐與成績結果相關分析
library(arules)
#午餐與成績結果相關分析
install.packages("arules")
library(arules)
data("Adult")
Adult
View(data)
View(data)
#題目改成 Student Performance analysis
#資料來源 https://www.kaggle.com/spscientist/students-performance-in-exams
#共1000筆資料
rm(list=ls())
#題目改成 Student Performance analysis
#資料來源 https://www.kaggle.com/spscientist/students-performance-in-exams
#共1000筆資料
rm(list=ls())
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require(stats)) {
install.packages("stats")
library(stats)
}
if (!require(dplyr)) {
install.packages("dplyr")
library(dplyr)
}
#讀檔
Data<-read.csv("C:/Users/user/OneDrive/桌面/StudentsPerformance.csv", header=T, sep=",")
#View(Data)
#head(Data)
#資料清洗和重整
colnames(Data)[2]<-"group"
#colnames(Data)
Data$group<-as.character(Data$group)
group<-strsplit(Data$group," ")
group<-unlist(group)
group<-subset(group,group!="group")
Data$group<-group
Data$gender<-as.character(Data$gender)
Data$parental.level.of.education<-as.character(Data$parental.level.of.education)
Data$lunch<-as.character(Data$lunch)
Data$test.preparation.course<-as.character(Data$test.preparation.course)
Data$math.score<-as.numeric(as.character(Data$math.score))
Data$reading.score<-as.numeric(as.character(Data$reading.score))
Data$writing.score<-as.numeric(as.character(Data$writing.score))
#增加一列觀察成績總和
sum<-c(Data$math.score+Data$reading.score+Data$writing.score)
#將資料合併
Data<-cbind(Data,sum)
#將資料做排序
Data<-Data[order(Data$sum,decreasing = TRUE),]
View(Data)
#午餐與成績結果相關分析
data("Data")
#午餐與成績結果相關分析
attributes(Data)
data2<-Data
data2$sum<-NULL
(kmeans.result<-kmeans(data2,5))
#題目改成 Student Performance analysis
#資料來源 https://www.kaggle.com/spscientist/students-performance-in-exams
#共1000筆資料
rm(list=ls())
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require(stats)) {
install.packages("stats")
library(stats)
}
if (!require(dplyr)) {
install.packages("dplyr")
library(dplyr)
}
#讀檔
Data<-read.csv("C:/Users/user/OneDrive/桌面/StudentsPerformance.csv", header=T, sep=",")
#View(Data)
#head(Data)
#資料清洗和重整
colnames(Data)[2]<-"group"
#colnames(Data)
Data$group<-as.character(Data$group)
group<-strsplit(Data$group," ")
group<-unlist(group)
group<-subset(group,group!="group")
Data$group<-group
Data$gender<-as.character(Data$gender)
Data$parental.level.of.education<-as.character(Data$parental.level.of.education)
Data$lunch<-as.character(Data$lunch)
Data$test.preparation.course<-as.character(Data$test.preparation.course)
Data$math.score<-as.numeric(as.character(Data$math.score))
Data$reading.score<-as.numeric(as.character(Data$reading.score))
Data$writing.score<-as.numeric(as.character(Data$writing.score))
#增加一列觀察成績總和
sum<-c(Data$math.score+Data$reading.score+Data$writing.score)
#將資料合併
Data<-cbind(Data,sum)
#將資料做排序
Data<-Data[order(Data$sum,decreasing = TRUE),]
View(Data)
cor(Data$gender,Data$sum)
data<-Data
data$gender<-ifelse("female",0,1)
data$gender
data<-Data
data$gender
data$gender<-subset(data$gender,"female"<-0,"male"<-1)
data$gender
if(data$gender=="female")
{
data$gender=0
}else
{
data$gender=1
}
data$gender%>%filter(data$gender=="female")
data$gender%>%filter(data,data$gender=="female")
filter(data,data$gender=="female")
#男女資料分析
fcount<-filter(data,data$gender=="female")
#男女資料分析
fcount
#題目改成 Student Performance analysis
#資料來源 https://www.kaggle.com/spscientist/students-performance-in-exams
#共1000筆資料
rm(list=ls())
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
if (!require(stats)) {
install.packages("stats")
library(stats)
}
if (!require(dplyr)) {
install.packages("dplyr")
library(dplyr)
}
#讀檔
Data<-read.csv("C:/Users/user/OneDrive/桌面/StudentsPerformance.csv", header=T, sep=",")
#View(Data)
#head(Data)
#資料清洗和重整
colnames(Data)[2]<-"group"
#colnames(Data)
Data$group<-as.character(Data$group)
group<-strsplit(Data$group," ")
group<-unlist(group)
group<-subset(group,group!="group")
Data$group<-group
Data$gender<-as.character(Data$gender)
Data$parental.level.of.education<-as.character(Data$parental.level.of.education)
Data$lunch<-as.character(Data$lunch)
Data$test.preparation.course<-as.character(Data$test.preparation.course)
Data$math.score<-as.numeric(as.character(Data$math.score))
Data$reading.score<-as.numeric(as.character(Data$reading.score))
Data$writing.score<-as.numeric(as.character(Data$writing.score))
#增加一列觀察成績總和
sum<-c(Data$math.score+Data$reading.score+Data$writing.score)
#將資料合併
Data<-cbind(Data,sum)
#將資料做排序
Data<-Data[order(Data$sum,decreasing = TRUE),]
View(Data)
#男女資料分析
fcount<-filter(data,data$gender=="female")
#男女資料分析
fcount<-filter(Data,Data$gender=="female")
data<-Data
filter(data,data$gender=="female")
data[data$gender="female",]
data$gender%in%c("female")<-1
data$gender %in% c("female") <-1
library(subset)
install.packages("subset")
library(subset)
data$gender %in% c("female") <-1
data$gender[1]
data$gender[which(data$gender=="female")]<-0
data$gender
data$gender[which(data$gender=="male")]<-1
data$gender
cor(Data$gender,Data$sum)
class(data$gender)
data
data$gender<-as.numeric(as.character(data$gender))
data
class(data$gender)
cor(data$gender,data$sum)
cor(a,b)
a<-c(1,1,1,1,1,1,1,0,0,0,0,0,0,0)
b<-c(100,90,98,100,95,89,91,30,24,39,22,21,20,7)
cor(a,b)
a<-c(0,0,0,0,0,0,0,1,1,1,1,1,1,1)
b<-c(100,90,98,100,95,89,91,30,24,39,22,21,20,7)
cor(a,b)
cor(data$gender,data$math.score)
cor(data$gender,data$reading.score)
cor(data$gender,data$writing.score)
gender_sum%>% ggplot( aes(x=data$gender, y=data$math.score)) +
geom_line() +
geom_point()
gender_sum
data%>% ggplot( aes(x=data$gender, y=data$math.score)) +
geom_line() +
geom_point()
#午餐與成績結果相關分析
mcount
mcount<-filter(data,data$gender=="male")
#午餐與成績結果相關分析
mcount
mcount<-filter(Data,Data$gender=="male")
#午餐與成績結果相關分析
mcount
data<-Data
#男女資料分析
fcount<-filter(Data,Data$gender=="female")
mcount<-filter(Data,Data$gender=="male")
f1<-sum(fcount$math.score)
f1
m1<-sum(mcount$math.score)
m1
m1<-sum(mcount$reading.score)
f1<-sum(fcount$reading.score)
f1
m1
m1<-sum(mcount$writing.score)
f1<-sum(fcount$writing.score)
m1
f1
fcount<-filter(Data,Data$gender=="female")
mcount<-filter(Data,Data$gender=="male")
gen<-c("male","female")
gencount<-c(nrow(mcount),nrow(fcount))
barplot(gencount,names.arg=gen,col=c("darkblue","red"))
install.packages("corrplot")
library(corrplot)
corrplot(data, method="circle")
m<-cbind(data$gender,data$math.score)
m
data<-Data
data$gender[which(data$gender=="female")]<-0
data$gender[which(data$gender=="male")]<-1
data$gender<-as.numeric(as.character(data$gender))
m<-cbind(data$gender,data$math.score)
corrplot(m, method="circle")
m
m<-cbind(data$gender,data$math.score)
corrplot(m, method="circle")
m<-cbind(data$gender,data$math.score/100)
m
corrplot(m, method="circle")
corrplot(m, method="number")
corrplot(m, type="upper")
round(m,2)
round(m,2)
corrplot(m, method="circle")
install.packages("Hmisc")
library("Hmisc")
res2 <- rcorr(as.matrix(data))
res2 <- rcorr(as.matrix(m))
res2
m<-cbind(c(1:1000),data$math.score/100)
colnames(data)
rownames(data)
m<-cbind(rownames(data),data$math.score/100)
m
corrplot(m, method="circle")
m  %>% ggplot( aes(x=date, y=value)) +
geom_line() +
geom_point()
m<-cbind(rownames(data),data$math.score)
m  %>% ggplot( aes(x=rownames(data), y=data$math.score)) +
geom_line() +
geom_point()
m<-cbind(rownames(data),data$math.score)
m
m  %>% ggplot( aes(x=rownames(data), y=data$math.score)) +
geom_line() +
geom_point()
data  %>% ggplot( aes(x=rownames(data), y=data$math.score)) +
geom_line() +
geom_point()
mcount
data  %>% ggplot( aes(x=rownames(mcount), y=mcount$math.score)) +
geom_line() +
geom_point()
rownames(mcount)
mcount$math.score
Data  %>% ggplot( aes(x=rownames(mcount), y=mcount$math.score)) +
geom_line() +
geom_point()
mcount  %>% ggplot( aes(x=rownames(mcount), y=mcount$math.score)) +
geom_line() +
geom_point()
fcount  %>% ggplot( aes(x=rownames(fcount), y=fcount$math.score)) +
geom_line() +
geom_point()
mcount  %>% ggplot( aes(x=rownames(mcount), y=mcount$math.score)) +
geom_line() +
geom_point()
fcount  %>% ggplot( aes(x=rownames(fcount), y=fcount$math.score)) +
geom_line() +
geom_point()
mcount  %>% ggplot( aes(x=rownames(mcount), y=mcount$math.score)) +
geom_line() +
geom_point()
p1<-mcount  %>% ggplot( aes(x=rownames(mcount), y=mcount$math.score)) +
geom_line() +
geom_point()
p2<-fcount  %>% ggplot( aes(x=rownames(fcount), y=fcount$math.score)) +
geom_line() +
geom_point()
multiplot(p1, p2, cols=2)
if (!require(ggplot2)) {
install.packages("ggplot2")
library(ggplot2)
}
multiplot(p1, p2, cols=2)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggarrange(p1,p2,ncol=2,labels=c("A","B"))
p1<-mcount  %>% ggplot( aes(x=mcount$group, y=mcount$math.score)) +
geom_line() +
geom_point()
p1
data
p1<-data  %>% ggplot( aes(x=data$parental.level.of.education, y=data$math.score)) +
geom_line() +
geom_point()
p1
p1<-data  %>% ggplot( aes(x=data$group, y=data$parental.level.of.education)) +
geom_line() +
geom_point()
p1
